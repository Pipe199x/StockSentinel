# =========================
#   news_etl/config.yaml
# =========================

io:
  # El workflow genera este RAW local antes del ETL
  input_ndjson: "data/news_raw.ndjson"

  # Salidas locales (para preview y para subir a Blob)
  output_ndjson: "data/news_{{date}}.ndjson"
  output_preview_csv: "data/news_preview_{{date}}.csv"
  heartbeat_file: "data/heartbeat.txt"

azure_language:
  # Usa variables de entorno en CI. Local puedes poner valores directos si quieres.
  endpoint: "${AZURE_LANGUAGE_ENDPOINT}"
  key: "${AZURE_LANGUAGE_KEY}"
  api_version: "2023-04-01"

  # Deja vacío para autodetección. Si quieres forzar, pon "en" o "es".
  force_language: ""

  # Flags de tareas (todas activas)
  tasks:
    language_detection: true
    sentiment_analysis: true
    key_phrase_extraction: true
    entity_recognition: true
    entity_linking: true

  # Límite real de la API = 5
  batch_size: 5
  timeout_seconds: 30

# Subida a Azure Blob por Connection String (la toma de AZURE_STORAGE_CONNECTION_STRING)
azure_blob:
  enabled: true
  container: "datasets"
  prefix: "news"              # Se guardará como datasets/news/...
  # Si dejas vacío, usa AZURE_STORAGE_CONNECTION_STRING del entorno
  connection_string: "${AZURE_STORAGE_CONNECTION_STRING}"
  content_types:
    ".ndjson": "application/x-ndjson"
    ".csv": "text/csv; charset=utf-8"
    ".txt": "text/plain; charset=utf-8"

filters:
  # Si llenas whitelist, solo se aceptan esas fuentes (en minúsculas)
  allowed_sources_whitelist: []

  # Bloqueos directos de dominios/fuentes ruidosas
  source_blacklist:
    - "slickdeals.net"
    - "9to5toys.com"
    - "moneysavingmom.com"
    - "commonsensewithmoney.com"
    - "redmondpie.com"
    - "biztoc.com"
    - "freerepublic.com"
    - "bringatrailer.com"
    - "globenewswire.com"
    - "bleedingcool.com"
    - "brobible.com"
    - "thegadgetflow.com"
    - "pagesix.com"

  # Frases para excluir (título o URL)
  exclude_phrases:
    - "(?i)\\bfree\\s*shipping\\b"
    - "(?i)\\bcoupon\\b"
    - "(?i)\\bsubscribe\\s*&\\s*save\\b"
    - "(?i)\\bclearance\\b"
    - "(?i)\\b%\\s*off\\b"
    - "(?i)\\bdeal(s)?\\b"
    - "(?i)\\bpromo(code)?\\b"
    - "(?i)\\bdiscount(s)?\\b"

# Filtro de comercio más agresivo (se permite prensa corporativa oficial)
commerce_filter:
  enabled: true
  title_url_terms:
    - "(?i)\\bdeal(s)?\\b"
    - "(?i)\\bdiscount(s)?\\b"
    - "(?i)\\bsale\\b"
    - "(?i)\\bpromo(code)?\\b"
    - "(?i)\\bsubscribe\\s*&\\s*save\\b"
    - "(?i)\\b%\\s*off\\b"
    - "(?i)\\bfree\\s*shipping\\b"
  path_terms:
    - "(?i)/deal(s)?/"
    - "(?i)/coupons?/"
    - "(?i)/offers?/"
  price_percent_rules:
    min_price_tokens: 2
    min_percent_tokens: 2
    price_regex: "(?i)(\\$\\s?\\d+[\\d\\.,]*)"
    percent_regex: "(?i)\\b\\d{1,3}\\s?%\\b"
  # blogs corporativos permitidos (noticias reales)
  allowed_corporate_domains:
    - "aws.amazon.com"
    - "aboutamazon.com"
    - "blogs.microsoft.com"
    - "devblogs.microsoft.com"
    - "googleblog.com"
    - "ai.googleblog.com"
    - "blog.google"
    - "about.fb.com"
    - "blog.youtube"

# Auto-blacklist por repetición
auto_blacklist:
  enabled: true
  min_count: 3
  min_ratio: 0.8

# Evita resultados de registries de paquetes (no son noticias)
registry_domains_blacklist:
  - "pypi.org"
  - "npmjs.com"
  - "crates.io"
  - "rubygems.org"
  - "packagist.org"
  - "cran.r-project.org"
  - "anaconda.org"
  - "dl.google.com"

ticker_tagging:
  enabled: true
  # Expresiones que se buscarán en título/summary/source y en entities devueltas por Azure
  tickers:
    AMZN:
      - "(?i)\\bamazon\\b"
      - "(?i)\\baws\\b"
      - "(?i)\\bprime\\s*video\\b"
      - "(?i)\\bkindle\\b"
      - "(?i)\\bring\\b"
      - "(?i)\\balexa\\b"
      - "(?i)\\bamazon\\s+luna\\b"
    MSFT:
      - "(?i)\\bmicrosoft\\b"
      - "(?i)\\bwindows\\b"
      - "(?i)\\bxbox\\b"
      - "(?i)\\bgame\\s*pass\\b"
      - "(?i)\\bazure\\b"
      - "(?i)\\bcopilot\\b"
      - "(?i)\\bmicrosoft\\s*365\\b|\\boffice\\s*365\\b"
      - "(?i)\\bsharepoint\\b"
      - "(?i)\\blinkedin\\b"
    GOOGL:
      - "(?i)\\bgoogle\\b"
      - "(?i)\\balphabet\\b"
      - "(?i)\\byoutube\\b"
      - "(?i)\\bandroid\\b"
      - "(?i)\\bgemini\\b"
      - "(?i)\\bwaymo\\b"
      - "(?i)\\bgmail\\b"
      - "(?i)\\bgoogle\\s*maps\\b"

runtime:
  log_level: "INFO"
  sample_limit: 0
