name: ETL NEWS (CRON + MANUAL)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 15 * * 1-5"

jobs:
  etl:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      AZURE_LANGUAGE_ENDPOINT: ${{ secrets.AZURE_LANGUAGE_ENDPOINT }}
      AZURE_LANGUAGE_KEY: ${{ secrets.AZURE_LANGUAGE_KEY }}
      AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      SAMPLE_LIMIT: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r news_etl/requirements.txt

      - name: Prepare data dir
        run: mkdir -p data

      - name: Generate raw with NewsAPI
        env:
          NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
        run: |
          set -euo pipefail
          # 1) Validación de secret
          if [ -z "${NEWSAPI_KEY:-}" ]; then
            echo "::error::NEWSAPI_KEY no está definido en Secrets"
            exit 1
          fi
          echo "NEWSAPI_KEY: OK (definido)"

          # 2) Ejecutar cliente NewsAPI
          python -m news_etl.news_client \
            --out data/news_raw.ndjson \
            --tickers AMZN,MSFT,GOOGL \
            --language en

          echo "=== Listando data/ ==="
          ls -l data || true

          # 3) Validar que el RAW exista y tenga contenido (>0 bytes)
          if [ ! -s "data/news_raw.ndjson" ]; then
            echo "::error::No se generó data/news_raw.ndjson (archivo faltante o vacío)."
            echo "Causas típicas: NEWSAPI_KEY inválida/sin cuota o error en news_client."
            exit 1
          fi
          echo "RAW OK: data/news_raw.ndjson ($(wc -c < data/news_raw.ndjson) bytes)"

      - name: Run ETL
        run: |
          set -euo pipefail
          test -s data/news_raw.ndjson || { echo "::error::Falta data/news_raw.ndjson"; exit 1; }
          python -m news_etl.news_etl --config news_etl/config.yaml

      - name: Cleanup local raw
        if: always()
        run: |
          rm -f data/news_raw.ndjson || true
          echo "Limpieza hecha; solo quedan CSV en Blob (datasets/news/)."
